{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "14c38747-eab8-4fa1-bfe5-f202bb0da49b",
   "metadata": {},
   "source": [
    "The Jupyter notebook should show a brief problem description, EDA procedure, analysis (model building and training), results, and discussion/conclusion. If your work doesn't fit into one notebook (or you think it will be less readable by having one large notebook), make several notebooks or scripts in the GitHub repository (as deliverable 3) and submit a report-style notebook or pdf instead.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "646e5479-145b-49df-8bd2-24d2bcbe1c0b",
   "metadata": {},
   "source": [
    "BRIEF PROBLEM: SpaceX advertises Falcon 9 rocket launches on its website with a cost of 62 million dollars; other providers cost upward of 165 million dollars each, much of the savings is because SpaceX can reuse the first stage. Therefore if we can determine if the first stage will land, we can determine the cost of a launch. This information can be used if an alternate company wants to bid against SpaceX for a rocket launch. GOAL: I will predict if the Falcon 9 first stage will land successfully. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a33aa6e-b45d-4408-b61a-c2a6b0105f9c",
   "metadata": {},
   "source": [
    "EDA PROCEDURE:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ed0d4c5f-f564-4f7e-a4ef-141c01199fbb",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Collecting Data\n",
    "import requests\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import datetime\n",
    "\n",
    "pd.set_option('display.max_columns', None)\n",
    "pd.set_option('display.max_colwidth', None)\n",
    "\n",
    "def getBoosterVersion(data): #booster name\n",
    "    for x in data['rocket']:\n",
    "       if x:\n",
    "        response = requests.get(\"https://api.spacexdata.com/v4/rockets/\"+str(x)).json()\n",
    "        BoosterVersion.append(response['name'])\n",
    "        \n",
    "def getLaunchSite(data): #Name of launch site, longtitude, and latitude\n",
    "    for x in data['launchpad']:\n",
    "       if x:\n",
    "         response = requests.get(\"https://api.spacexdata.com/v4/launchpads/\"+str(x)).json()\n",
    "         Longitude.append(response['longitude'])\n",
    "         Latitude.append(response['latitude'])\n",
    "         LaunchSite.append(response['name'])\n",
    "        \n",
    "def getPayloadData(data): #Mass of payload and oribit where it's going\n",
    "    for load in data['payloads']:\n",
    "       if load:\n",
    "        response = requests.get(\"https://api.spacexdata.com/v4/payloads/\"+load).json()\n",
    "        PayloadMass.append(response['mass_kg'])\n",
    "        Orbit.append(response['orbit'])\n",
    "        \n",
    "def getCoreData(data): #Landing Outcome, type, number of flights with core, gridfins used, core reused, legs were used, landing pad used, block of the core , number of times this specific core has been reused, serial of the core\n",
    "    for core in data['cores']:\n",
    "            if core['core'] != None:\n",
    "                response = requests.get(\"https://api.spacexdata.com/v4/cores/\"+core['core']).json()\n",
    "                Block.append(response['block'])\n",
    "                ReusedCount.append(response['reuse_count'])\n",
    "                Serial.append(response['serial'])\n",
    "            else:\n",
    "                Block.append(None)\n",
    "                ReusedCount.append(None)\n",
    "                Serial.append(None)\n",
    "            Outcome.append(str(core['landing_success'])+' '+str(core['landing_type']))\n",
    "            Flights.append(core['flight'])\n",
    "            GridFins.append(core['gridfins'])\n",
    "            Reused.append(core['reused'])\n",
    "            Legs.append(core['legs'])\n",
    "            LandingPad.append(core['landpad'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "47f127ee-5953-44e0-b3f4-a1d6398d3346",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Requesting Rocket Launch Data\n",
    "spacex_url=\"https://api.spacexdata.com/v4/launches/past\"\n",
    "response = requests.get(spacex_url)\n",
    "\n",
    "static_json_url='https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/API_call_spacex_api.json'\n",
    "response.status_code\n",
    "\n",
    "# Convert the json result into a dataframe\n",
    "data = pd.json_normalize(response.json())\n",
    "data.head(5)\n",
    "\n",
    "data = data[['rocket', 'payloads', 'launchpad', 'cores', 'flight_number', 'date_utc']]\n",
    "data = data[data['cores'].map(len)==1]\n",
    "data = data[data['payloads'].map(len)==1]\n",
    "data['cores'] = data['cores'].map(lambda x : x[0])\n",
    "data['payloads'] = data['payloads'].map(lambda x : x[0])\n",
    "data['date'] = pd.to_datetime(data['date_utc']).dt.date\n",
    "data = data[data['date'] <= datetime.date(2020, 11, 13)]\n",
    "\n",
    "#Global Variables\n",
    "BoosterVersion = []\n",
    "PayloadMass = []\n",
    "Orbit = []\n",
    "LaunchSite = []\n",
    "Outcome = []\n",
    "Flights = []\n",
    "GridFins = []\n",
    "Reused = []\n",
    "Legs = []\n",
    "LandingPad = []\n",
    "Block = []\n",
    "ReusedCount = []\n",
    "Serial = []\n",
    "Longitude = []\n",
    "Latitude = []\n",
    "\n",
    "BoosterVersion\n",
    "getBoosterVersion(data)\n",
    "BoosterVersion[0:5]\n",
    "\n",
    "getLaunchSite(data)\n",
    "getPayloadData(data)\n",
    "getCoreData(data)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "507a107d-59c2-4e7e-930c-d5187cc79b7e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Construct our dataset\n",
    "launch_dict = {'FlightNumber': list(data['flight_number']),\n",
    "'Date': list(data['date']),\n",
    "'BoosterVersion':BoosterVersion,\n",
    "'PayloadMass':PayloadMass,\n",
    "'Orbit':Orbit,\n",
    "'LaunchSite':LaunchSite,\n",
    "'Outcome':Outcome,\n",
    "'Flights':Flights,\n",
    "'GridFins':GridFins,\n",
    "'Reused':Reused,\n",
    "'Legs':Legs,\n",
    "'LandingPad':LandingPad,\n",
    "'Block':Block,\n",
    "'ReusedCount':ReusedCount,\n",
    "'Serial':Serial,\n",
    "'Longitude': Longitude,\n",
    "'Latitude': Latitude}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fcc22dd3-3fdb-4d51-b65c-b8940fb8bc01",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FlightNumber</th>\n",
       "      <th>PayloadMass</th>\n",
       "      <th>Flights</th>\n",
       "      <th>Block</th>\n",
       "      <th>ReusedCount</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>94.000000</td>\n",
       "      <td>88.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>94.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>54.202128</td>\n",
       "      <td>5919.165341</td>\n",
       "      <td>1.755319</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.053191</td>\n",
       "      <td>-75.553302</td>\n",
       "      <td>28.581782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>30.589048</td>\n",
       "      <td>4909.689575</td>\n",
       "      <td>1.197544</td>\n",
       "      <td>1.595288</td>\n",
       "      <td>4.153938</td>\n",
       "      <td>53.391880</td>\n",
       "      <td>4.639981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-120.610829</td>\n",
       "      <td>9.047721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>28.250000</td>\n",
       "      <td>2406.250000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-80.603956</td>\n",
       "      <td>28.561857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>52.500000</td>\n",
       "      <td>4414.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>81.500000</td>\n",
       "      <td>9543.750000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.608058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>106.000000</td>\n",
       "      <td>15600.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>167.743129</td>\n",
       "      <td>34.632093</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       FlightNumber   PayloadMass    Flights      Block  ReusedCount  \\\n",
       "count     94.000000     88.000000  94.000000  90.000000    94.000000   \n",
       "mean      54.202128   5919.165341   1.755319   3.500000     3.053191   \n",
       "std       30.589048   4909.689575   1.197544   1.595288     4.153938   \n",
       "min        1.000000     20.000000   1.000000   1.000000     0.000000   \n",
       "25%       28.250000   2406.250000   1.000000   2.000000     0.000000   \n",
       "50%       52.500000   4414.000000   1.000000   4.000000     1.000000   \n",
       "75%       81.500000   9543.750000   2.000000   5.000000     4.000000   \n",
       "max      106.000000  15600.000000   6.000000   5.000000    13.000000   \n",
       "\n",
       "        Longitude   Latitude  \n",
       "count   94.000000  94.000000  \n",
       "mean   -75.553302  28.581782  \n",
       "std     53.391880   4.639981  \n",
       "min   -120.610829   9.047721  \n",
       "25%    -80.603956  28.561857  \n",
       "50%    -80.577366  28.561857  \n",
       "75%    -80.577366  28.608058  \n",
       "max    167.743129  34.632093  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Creating a dataframe\n",
    "df = pd.DataFrame(launch_dict)\n",
    "df.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "623ba78b-23cf-4676-a333-00fc94a60585",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FlightNumber</th>\n",
       "      <th>Date</th>\n",
       "      <th>BoosterVersion</th>\n",
       "      <th>PayloadMass</th>\n",
       "      <th>Orbit</th>\n",
       "      <th>LaunchSite</th>\n",
       "      <th>Outcome</th>\n",
       "      <th>Flights</th>\n",
       "      <th>GridFins</th>\n",
       "      <th>Reused</th>\n",
       "      <th>Legs</th>\n",
       "      <th>LandingPad</th>\n",
       "      <th>Block</th>\n",
       "      <th>ReusedCount</th>\n",
       "      <th>Serial</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2010-06-04</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LEO</td>\n",
       "      <td>CCSFS SLC 40</td>\n",
       "      <td>None None</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0003</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>2012-05-22</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>525.0</td>\n",
       "      <td>LEO</td>\n",
       "      <td>CCSFS SLC 40</td>\n",
       "      <td>None None</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0005</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>2013-03-01</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>677.0</td>\n",
       "      <td>ISS</td>\n",
       "      <td>CCSFS SLC 40</td>\n",
       "      <td>None None</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0007</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4</td>\n",
       "      <td>2013-09-29</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>500.0</td>\n",
       "      <td>PO</td>\n",
       "      <td>VAFB SLC 4E</td>\n",
       "      <td>False Ocean</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B1003</td>\n",
       "      <td>-120.610829</td>\n",
       "      <td>34.632093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>5</td>\n",
       "      <td>2013-12-03</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>3170.0</td>\n",
       "      <td>GTO</td>\n",
       "      <td>CCSFS SLC 40</td>\n",
       "      <td>None None</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B1004</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>86</td>\n",
       "      <td>2020-09-03</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>15600.0</td>\n",
       "      <td>VLEO</td>\n",
       "      <td>KSC LC 39A</td>\n",
       "      <td>True ASDS</td>\n",
       "      <td>2</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>5e9e3032383ecb6bb234e7ca</td>\n",
       "      <td>5.0</td>\n",
       "      <td>12</td>\n",
       "      <td>B1060</td>\n",
       "      <td>-80.603956</td>\n",
       "      <td>28.608058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>87</td>\n",
       "      <td>2020-10-06</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>15600.0</td>\n",
       "      <td>VLEO</td>\n",
       "      <td>KSC LC 39A</td>\n",
       "      <td>True ASDS</td>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>5e9e3032383ecb6bb234e7ca</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13</td>\n",
       "      <td>B1058</td>\n",
       "      <td>-80.603956</td>\n",
       "      <td>28.608058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>88</td>\n",
       "      <td>2020-10-18</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>15600.0</td>\n",
       "      <td>VLEO</td>\n",
       "      <td>KSC LC 39A</td>\n",
       "      <td>True ASDS</td>\n",
       "      <td>6</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>5e9e3032383ecb6bb234e7ca</td>\n",
       "      <td>5.0</td>\n",
       "      <td>12</td>\n",
       "      <td>B1051</td>\n",
       "      <td>-80.603956</td>\n",
       "      <td>28.608058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>89</td>\n",
       "      <td>2020-10-24</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>15600.0</td>\n",
       "      <td>VLEO</td>\n",
       "      <td>CCSFS SLC 40</td>\n",
       "      <td>True ASDS</td>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>5e9e3033383ecbb9e534e7cc</td>\n",
       "      <td>5.0</td>\n",
       "      <td>12</td>\n",
       "      <td>B1060</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>90</td>\n",
       "      <td>2020-11-05</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>3681.0</td>\n",
       "      <td>MEO</td>\n",
       "      <td>CCSFS SLC 40</td>\n",
       "      <td>True ASDS</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>5e9e3032383ecb6bb234e7ca</td>\n",
       "      <td>5.0</td>\n",
       "      <td>8</td>\n",
       "      <td>B1062</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>90 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    FlightNumber        Date BoosterVersion  PayloadMass Orbit    LaunchSite  \\\n",
       "4              1  2010-06-04       Falcon 9          NaN   LEO  CCSFS SLC 40   \n",
       "5              2  2012-05-22       Falcon 9        525.0   LEO  CCSFS SLC 40   \n",
       "6              3  2013-03-01       Falcon 9        677.0   ISS  CCSFS SLC 40   \n",
       "7              4  2013-09-29       Falcon 9        500.0    PO   VAFB SLC 4E   \n",
       "8              5  2013-12-03       Falcon 9       3170.0   GTO  CCSFS SLC 40   \n",
       "..           ...         ...            ...          ...   ...           ...   \n",
       "89            86  2020-09-03       Falcon 9      15600.0  VLEO    KSC LC 39A   \n",
       "90            87  2020-10-06       Falcon 9      15600.0  VLEO    KSC LC 39A   \n",
       "91            88  2020-10-18       Falcon 9      15600.0  VLEO    KSC LC 39A   \n",
       "92            89  2020-10-24       Falcon 9      15600.0  VLEO  CCSFS SLC 40   \n",
       "93            90  2020-11-05       Falcon 9       3681.0   MEO  CCSFS SLC 40   \n",
       "\n",
       "        Outcome  Flights  GridFins  Reused   Legs                LandingPad  \\\n",
       "4     None None        1     False   False  False                      None   \n",
       "5     None None        1     False   False  False                      None   \n",
       "6     None None        1     False   False  False                      None   \n",
       "7   False Ocean        1     False   False  False                      None   \n",
       "8     None None        1     False   False  False                      None   \n",
       "..          ...      ...       ...     ...    ...                       ...   \n",
       "89    True ASDS        2      True    True   True  5e9e3032383ecb6bb234e7ca   \n",
       "90    True ASDS        3      True    True   True  5e9e3032383ecb6bb234e7ca   \n",
       "91    True ASDS        6      True    True   True  5e9e3032383ecb6bb234e7ca   \n",
       "92    True ASDS        3      True    True   True  5e9e3033383ecbb9e534e7cc   \n",
       "93    True ASDS        1      True   False   True  5e9e3032383ecb6bb234e7ca   \n",
       "\n",
       "    Block  ReusedCount Serial   Longitude   Latitude  \n",
       "4     1.0            0  B0003  -80.577366  28.561857  \n",
       "5     1.0            0  B0005  -80.577366  28.561857  \n",
       "6     1.0            0  B0007  -80.577366  28.561857  \n",
       "7     1.0            0  B1003 -120.610829  34.632093  \n",
       "8     1.0            0  B1004  -80.577366  28.561857  \n",
       "..    ...          ...    ...         ...        ...  \n",
       "89    5.0           12  B1060  -80.603956  28.608058  \n",
       "90    5.0           13  B1058  -80.603956  28.608058  \n",
       "91    5.0           12  B1051  -80.603956  28.608058  \n",
       "92    5.0           12  B1060  -80.577366  28.561857  \n",
       "93    5.0            8  B1062  -80.577366  28.561857  \n",
       "\n",
       "[90 rows x 17 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Only include Falcon 9 Launches\n",
    "\n",
    "data_falcon9 = df.loc[df['BoosterVersion'] != 'Falcon 1']\n",
    "data_falcon9.loc[:,'FlightNumber'] = list(range(1, data_falcon9.shape[0]+1))\n",
    "data_falcon9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7e4e2663-1516-4f32-862d-5e0eeb7ceb73",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/45/vm531mkx0bj6mjgy925frkzr0000gn/T/ipykernel_84136/2414839881.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data_falcon9['PayloadMass'].replace(np.nan, payload_mass_mean, inplace=True)\n"
     ]
    }
   ],
   "source": [
    "#DATA WRANGLING\n",
    "data_falcon9.isnull().sum()\n",
    "\n",
    "payload_mass_mean = data_falcon9['PayloadMass'].mean() #Missing Values\n",
    "data_falcon9['PayloadMass'].replace(np.nan, payload_mass_mean, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1adbaabf-3fdb-45c5-a659-9b8c9be63646",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Orbit\n",
      "GTO      27\n",
      "ISS      21\n",
      "VLEO     14\n",
      "LEO      11\n",
      "PO        9\n",
      "SSO       5\n",
      "MEO       3\n",
      "ES-L1     1\n",
      "HEO       1\n",
      "SO        1\n",
      "GEO       1\n",
      "Name: count, dtype: int64\n",
      "0 True ASDS\n",
      "1 None None\n",
      "2 True RTLS\n",
      "3 False ASDS\n",
      "4 True Ocean\n",
      "5 False Ocean\n",
      "6 None ASDS\n",
      "7 False RTLS\n"
     ]
    }
   ],
   "source": [
    "#Calculate number of launches on each site\n",
    "launch_site_counts = df['LaunchSite'].value_counts()\n",
    "launch_site_counts\n",
    "\n",
    "#Calculate number and occurrence of each orbit\n",
    "orbit_counts = df['Orbit'].value_counts()\n",
    "print(orbit_counts)\n",
    "\n",
    "#Calculate the number and occurence of mission outcome of the oribits\n",
    "landing_outcomes = df['Outcome'].value_counts()\n",
    "landing_outcomes\n",
    "\n",
    "for i,outcome in enumerate(landing_outcomes.keys()):\n",
    "    print(i,outcome)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7f56ffd2-9151-49d8-9391-e224fa13199b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'False ASDS', 'False Ocean', 'False RTLS', 'None ASDS', 'None None'}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bad_outcomes=set(landing_outcomes.keys()[[1,3,5,6,7]])\n",
    "bad_outcomes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "719e9e3d-dab5-4c95-b942-2982d9ba8b60",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     1\n",
      "1     1\n",
      "2     1\n",
      "3     1\n",
      "4     1\n",
      "     ..\n",
      "89    1\n",
      "90    1\n",
      "91    1\n",
      "92    1\n",
      "93    1\n",
      "Name: Outcome, Length: 94, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#Create landing outcome label\n",
    "bad_outcome = {'Failure', 'Partial Failure', 'Prelaunch Failure', 'Uncontrolled', 'Lost'}\n",
    "landing_class = df['Outcome'].apply(lambda outcome: 0 if outcome in bad_outcome else 1)\n",
    "print(landing_class)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dc4a8cb6-fe02-4c01-bb64-dd2edc682d43",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Class\n",
       "0      1\n",
       "1      1\n",
       "2      1\n",
       "3      1\n",
       "4      1\n",
       "5      1\n",
       "6      1\n",
       "7      1"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "df['Class']=landing_class\n",
    "df[['Class']].head(8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a9998a37-99ee-458f-9a50-2ac414a7ab09",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#importing libraries for visualizations\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b458e217-a65e-473f-8a11-742609228b55",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   FlightNumber        Date BoosterVersion  PayloadMass Orbit    LaunchSite  \\\n",
      "0             1  2010-06-04       Falcon 9  6104.959412   LEO  CCAFS SLC 40   \n",
      "1             2  2012-05-22       Falcon 9   525.000000   LEO  CCAFS SLC 40   \n",
      "2             3  2013-03-01       Falcon 9   677.000000   ISS  CCAFS SLC 40   \n",
      "3             4  2013-09-29       Falcon 9   500.000000    PO   VAFB SLC 4E   \n",
      "4             5  2013-12-03       Falcon 9  3170.000000   GTO  CCAFS SLC 40   \n",
      "\n",
      "       Outcome  Flights  GridFins  Reused   Legs LandingPad  Block  \\\n",
      "0    None None        1     False   False  False        NaN    1.0   \n",
      "1    None None        1     False   False  False        NaN    1.0   \n",
      "2    None None        1     False   False  False        NaN    1.0   \n",
      "3  False Ocean        1     False   False  False        NaN    1.0   \n",
      "4    None None        1     False   False  False        NaN    1.0   \n",
      "\n",
      "   ReusedCount Serial   Longitude   Latitude  Class  \n",
      "0            0  B0003  -80.577366  28.561857      0  \n",
      "1            0  B0005  -80.577366  28.561857      0  \n",
      "2            0  B0007  -80.577366  28.561857      0  \n",
      "3            0  B1003 -120.610829  34.632093      0  \n",
      "4            0  B1004  -80.577366  28.561857      0  \n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import io\n",
    "\n",
    "URL = \"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/dataset_part_2.csv\"\n",
    "response = requests.get(URL)\n",
    "if response.status_code == 200:\n",
    "    dataset_part_2_csv = io.BytesIO(response.content)\n",
    "    df = pd.read_csv(dataset_part_2_csv)\n",
    "    print(df.head(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "36011203-bed6-495c-9661-4b31773ca066",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/home/anaconda3/lib/python3.11/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2558.88x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(y=\"PayloadMass\", x=\"FlightNumber\", hue=\"Class\", data=df, aspect = 5)\n",
    "plt.xlabel(\"Flight Number\",fontsize=20)\n",
    "plt.ylabel(\"Pay load Mass (kg)\",fontsize=20)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bf4da924-431b-41a5-bb35-ff8d6152274f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/home/anaconda3/lib/python3.11/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 1200x600 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1258.88x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "sns.catplot(x='FlightNumber', y='LaunchSite', hue='Class', data=df, palette='viridis', height=6, aspect=2)\n",
    "plt.title('Scatter Plot: Flight Number vs Launch Site with Class')\n",
    "plt.xlabel('Flight Number')\n",
    "plt.ylabel('Launch Site')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "bf9bba45-ad9f-423a-b7b4-93fe59148068",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "sns.scatterplot(x='PayloadMass', y='LaunchSite', hue='Class', data=df, palette='viridis', marker='o')\n",
    "plt.title('Scatter Plot: Payload Mass vs Launch Site with Class')\n",
    "plt.xlabel('Payload Mass (kg)')\n",
    "plt.ylabel('Launch Site')\n",
    "plt.legend(title='Class')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b578b142-a640-415b-af2a-bb5ea207d5c0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/45/vm531mkx0bj6mjgy925frkzr0000gn/T/ipykernel_84136/833967889.py:2: FutureWarning: \n",
      "\n",
      "The `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n",
      "\n",
      "  sns.barplot(x='Orbit', y='Class', data=df, ci=None, palette='viridis')\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "sns.barplot(x='Orbit', y='Class', data=df, ci=None, palette='viridis')\n",
    "plt.title('Success Rate by Orbit Type')\n",
    "plt.xlabel('Orbit Type')\n",
    "plt.ylabel('Success Rate')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1fd00e72-09a9-4c46-8a66-cc2ca9d78cd6",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "sns.scatterplot(x='FlightNumber', y='Orbit', hue='Class', data=df, palette='viridis', marker='o')\n",
    "plt.title('Scatter Plot: Flight Number vs Orbit with Class')\n",
    "plt.xlabel('Flight Number')\n",
    "plt.ylabel('Orbit')\n",
    "plt.legend(title='Class')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f43ed4d4-1fe5-466d-96eb-e133f6890163",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "sns.scatterplot(x='PayloadMass', y='Orbit', hue='Class', data=df, palette='viridis', marker='o')\n",
    "plt.title('Scatter Plot: Payload vs Orbit with Class')\n",
    "plt.xlabel('Payload Mass (kg)')\n",
    "plt.ylabel('Orbit')\n",
    "plt.legend(title='Class')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d94600b7-3cff-4f2c-a537-2ad25f0f3246",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FlightNumber</th>\n",
       "      <th>Date</th>\n",
       "      <th>BoosterVersion</th>\n",
       "      <th>PayloadMass</th>\n",
       "      <th>Orbit</th>\n",
       "      <th>LaunchSite</th>\n",
       "      <th>Outcome</th>\n",
       "      <th>Flights</th>\n",
       "      <th>GridFins</th>\n",
       "      <th>Reused</th>\n",
       "      <th>Legs</th>\n",
       "      <th>LandingPad</th>\n",
       "      <th>Block</th>\n",
       "      <th>ReusedCount</th>\n",
       "      <th>Serial</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2010</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>6104.959412</td>\n",
       "      <td>LEO</td>\n",
       "      <td>CCAFS SLC 40</td>\n",
       "      <td>None None</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0003</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2012</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>525.000000</td>\n",
       "      <td>LEO</td>\n",
       "      <td>CCAFS SLC 40</td>\n",
       "      <td>None None</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0005</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>677.000000</td>\n",
       "      <td>ISS</td>\n",
       "      <td>CCAFS SLC 40</td>\n",
       "      <td>None None</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0007</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2013</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>PO</td>\n",
       "      <td>VAFB SLC 4E</td>\n",
       "      <td>False Ocean</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B1003</td>\n",
       "      <td>-120.610829</td>\n",
       "      <td>34.632093</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2013</td>\n",
       "      <td>Falcon 9</td>\n",
       "      <td>3170.000000</td>\n",
       "      <td>GTO</td>\n",
       "      <td>CCAFS SLC 40</td>\n",
       "      <td>None None</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B1004</td>\n",
       "      <td>-80.577366</td>\n",
       "      <td>28.561857</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   FlightNumber  Date BoosterVersion  PayloadMass Orbit    LaunchSite  \\\n",
       "0             1  2010       Falcon 9  6104.959412   LEO  CCAFS SLC 40   \n",
       "1             2  2012       Falcon 9   525.000000   LEO  CCAFS SLC 40   \n",
       "2             3  2013       Falcon 9   677.000000   ISS  CCAFS SLC 40   \n",
       "3             4  2013       Falcon 9   500.000000    PO   VAFB SLC 4E   \n",
       "4             5  2013       Falcon 9  3170.000000   GTO  CCAFS SLC 40   \n",
       "\n",
       "       Outcome  Flights  GridFins  Reused   Legs LandingPad  Block  \\\n",
       "0    None None        1     False   False  False        NaN    1.0   \n",
       "1    None None        1     False   False  False        NaN    1.0   \n",
       "2    None None        1     False   False  False        NaN    1.0   \n",
       "3  False Ocean        1     False   False  False        NaN    1.0   \n",
       "4    None None        1     False   False  False        NaN    1.0   \n",
       "\n",
       "   ReusedCount Serial   Longitude   Latitude  Class  \n",
       "0            0  B0003  -80.577366  28.561857      0  \n",
       "1            0  B0005  -80.577366  28.561857      0  \n",
       "2            0  B0007  -80.577366  28.561857      0  \n",
       "3            0  B1003 -120.610829  34.632093      0  \n",
       "4            0  B1004  -80.577366  28.561857      0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Extract years from date\n",
    "year=[]\n",
    "def Extract_year():\n",
    "    for i in df[\"Date\"]:\n",
    "        year.append(i.split(\"-\")[0])\n",
    "    return year\n",
    "Extract_year()\n",
    "df['Date'] = year\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7bedf74e-f3d9-4ee2-8688-760c081e5f5b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Year'] = year\n",
    "\n",
    "success_rate_per_year = df.groupby('Year')['Class'].mean().reset_index()\n",
    "\n",
    "plt.figure(figsize=(12, 6))\n",
    "sns.lineplot(x='Year', y='Class', data=success_rate_per_year, marker='o', color='blue')\n",
    "plt.title('Yearly Launch Success Trend')\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Average Success Rate')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f8fb72c2-0d11-48b3-8699-b80b9d74ac5f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FlightNumber</th>\n",
       "      <th>PayloadMass</th>\n",
       "      <th>Orbit</th>\n",
       "      <th>LaunchSite</th>\n",
       "      <th>Flights</th>\n",
       "      <th>GridFins</th>\n",
       "      <th>Reused</th>\n",
       "      <th>Legs</th>\n",
       "      <th>LandingPad</th>\n",
       "      <th>Block</th>\n",
       "      <th>ReusedCount</th>\n",
       "      <th>Serial</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>6104.959412</td>\n",
       "      <td>LEO</td>\n",
       "      <td>CCAFS SLC 40</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>525.000000</td>\n",
       "      <td>LEO</td>\n",
       "      <td>CCAFS SLC 40</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>677.000000</td>\n",
       "      <td>ISS</td>\n",
       "      <td>CCAFS SLC 40</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B0007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>PO</td>\n",
       "      <td>VAFB SLC 4E</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B1003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>3170.000000</td>\n",
       "      <td>GTO</td>\n",
       "      <td>CCAFS SLC 40</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>B1004</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   FlightNumber  PayloadMass Orbit    LaunchSite  Flights  GridFins  Reused  \\\n",
       "0             1  6104.959412   LEO  CCAFS SLC 40        1     False   False   \n",
       "1             2   525.000000   LEO  CCAFS SLC 40        1     False   False   \n",
       "2             3   677.000000   ISS  CCAFS SLC 40        1     False   False   \n",
       "3             4   500.000000    PO   VAFB SLC 4E        1     False   False   \n",
       "4             5  3170.000000   GTO  CCAFS SLC 40        1     False   False   \n",
       "\n",
       "    Legs LandingPad  Block  ReusedCount Serial  \n",
       "0  False        NaN    1.0            0  B0003  \n",
       "1  False        NaN    1.0            0  B0005  \n",
       "2  False        NaN    1.0            0  B0007  \n",
       "3  False        NaN    1.0            0  B1003  \n",
       "4  False        NaN    1.0            0  B1004  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "features = df[['FlightNumber', 'PayloadMass', 'Orbit', 'LaunchSite', 'Flights', 'GridFins', 'Reused', 'Legs', 'LandingPad', 'Block', 'ReusedCount', 'Serial']]\n",
    "features.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "7d986630-8d5f-426a-8518-2f7973d92575",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Create dummy variables to categorical columns\n",
    "categorical_columns = ['Orbit', 'LaunchSite', 'LandingPad', 'Serial']\n",
    "features_one_hot = pd.get_dummies(features, columns=categorical_columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "37e42474-bfa3-4aac-a0e7-e3de7e8f0532",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/45/vm531mkx0bj6mjgy925frkzr0000gn/T/ipykernel_84136/970106160.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  features[numeric_columns] = features[numeric_columns].astype('float64')\n"
     ]
    }
   ],
   "source": [
    "numeric_columns = features.select_dtypes(include=['float64']).columns\n",
    "features[numeric_columns] = features[numeric_columns].astype('float64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a4793426-0706-405b-abdf-449edac867a1",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "features_one_hot = pd.get_dummies(features, columns=categorical_columns, dtype='float64')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3e82444-519b-433f-93d8-5c003b63c2ae",
   "metadata": {},
   "source": [
    "ANALYSIS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "5ea916c7-6632-462d-a1ef-ea725126f728",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Flight Number        Date Time (UTC) Booster Version  Launch Site  \\\n",
      "0              1  2010-06-04   18:45:00  F9 v1.0  B0003  CCAFS LC-40   \n",
      "1              2  2010-12-08   15:43:00  F9 v1.0  B0004  CCAFS LC-40   \n",
      "2              3  2012-05-22    7:44:00  F9 v1.0  B0005  CCAFS LC-40   \n",
      "3              4  2012-10-08    0:35:00  F9 v1.0  B0006  CCAFS LC-40   \n",
      "4              5  2013-03-01   15:10:00  F9 v1.0  B0007  CCAFS LC-40   \n",
      "\n",
      "                                                          Payload  \\\n",
      "0                            Dragon Spacecraft Qualification Unit   \n",
      "1  Dragon demo flight C1, two CubeSats,  barrel of Brouère cheese   \n",
      "2                                          Dragon demo flight C2+   \n",
      "3                                                    SpaceX CRS-1   \n",
      "4                                                    SpaceX CRS-2   \n",
      "\n",
      "   Payload Mass (kg)      Orbit         Customer        Landing Outcome  \\\n",
      "0                0.0        LEO           SpaceX  Failure   (parachute)   \n",
      "1                0.0  LEO (ISS)  NASA (COTS) NRO  Failure   (parachute)   \n",
      "2              525.0  LEO (ISS)      NASA (COTS)             No attempt   \n",
      "3              500.0  LEO (ISS)       NASA (CRS)             No attempt   \n",
      "4              677.0  LEO (ISS)       NASA (CRS)             No attempt   \n",
      "\n",
      "   class        Lat       Long  \n",
      "0      0  28.562302 -80.577356  \n",
      "1      0  28.562302 -80.577356  \n",
      "2      0  28.562302 -80.577356  \n",
      "3      0  28.562302 -80.577356  \n",
      "4      0  28.562302 -80.577356  \n"
     ]
    }
   ],
   "source": [
    "#ADDS LONG AND LAT TO DATASET\n",
    "URL = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/spacex_launch_geo.csv'\n",
    "\n",
    "response = requests.get(URL)\n",
    "\n",
    "if response.status_code == 200:\n",
    "    spacex_csv_file = io.BytesIO(response.content)\n",
    "    spacex_df = pd.read_csv(spacex_csv_file)\n",
    "    print(spacex_df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "4153015b-66f4-4fe6-8ec5-71c97b791298",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Launch Site</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CCAFS LC-40</td>\n",
       "      <td>28.562302</td>\n",
       "      <td>-80.577356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CCAFS SLC-40</td>\n",
       "      <td>28.563197</td>\n",
       "      <td>-80.576820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>KSC LC-39A</td>\n",
       "      <td>28.573255</td>\n",
       "      <td>-80.646895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>VAFB SLC-4E</td>\n",
       "      <td>34.632834</td>\n",
       "      <td>-120.610745</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Launch Site        Lat        Long\n",
       "0   CCAFS LC-40  28.562302  -80.577356\n",
       "1  CCAFS SLC-40  28.563197  -80.576820\n",
       "2    KSC LC-39A  28.573255  -80.646895\n",
       "3   VAFB SLC-4E  34.632834 -120.610745"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "spacex_df = spacex_df[['Launch Site', 'Lat', 'Long', 'class']]\n",
    "launch_sites_df = spacex_df.groupby(['Launch Site'], as_index=False).first()\n",
    "launch_sites_df = launch_sites_df[['Launch Site', 'Lat', 'Long']]\n",
    "launch_sites_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60bd853a-f9db-48ce-9d46-c440ad3bbe4a",
   "metadata": {
    "tags": []
   },
   "source": [
    "I played around with maps in python to show different site locations and how far they were from each other but couldn't figure out how to place that into this notebook for the life of me! I'm going to skip it since it doesn't really matter for our final project"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1b40f54-4929-4df3-9565-f9d5d3386993",
   "metadata": {},
   "source": [
    "Machine Learning\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "f1c5916b-c93f-4cb0-b005-df861efd4d18",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn import preprocessing\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "97e2a7df-c3e7-40a9-9ffb-d4ed9132cb46",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "def plot_confusion_matrix(y,y_predict):\n",
    "    \"this function plots the confusion matrix\"\n",
    "    from sklearn.metrics import confusion_matrix\n",
    "\n",
    "    cm = confusion_matrix(y, y_predict)\n",
    "    ax= plt.subplot()\n",
    "    sns.heatmap(cm, annot=True, ax = ax); #annot=True to annotate cells\n",
    "    ax.set_xlabel('Predicted labels')\n",
    "    ax.set_ylabel('True labels')\n",
    "    ax.set_title('Confusion Matrix'); \n",
    "    ax.xaxis.set_ticklabels(['did not land', 'land']); ax.yaxis.set_ticklabels(['did not land', 'landed']) \n",
    "    plt.show() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "74bcf88d-d3bc-4d32-b6f6-491906750633",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "URL1 = \"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/dataset_part_2.csv\"\n",
    "response = requests.get(URL1)\n",
    "if response.status_code == 200:\n",
    "    text1 = io.BytesIO(response.content)\n",
    "    data = pd.read_csv(text1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "57aff106-9379-41eb-94c7-410954144238",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "URL2 = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/dataset_part_3.csv'\n",
    "response = requests.get(URL2)\n",
    "if response.status_code == 200:\n",
    "    text2 = io.BytesIO(response.content)\n",
    "    X = pd.read_csv(text2)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "688fe6ec-37c5-4a4e-a4b6-a18e2e89a32d",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "Y = data['Class'].to_numpy()\n",
    "Y\n",
    "\n",
    "transform = preprocessing.StandardScaler()\n",
    "X = transform.fit_transform(X)\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "7ed5b0f4-0654-4377-9215-a92a06379783",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(18,)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "Y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "dea7e7aa-2df4-4b32-a3c1-9ae9e368b6c9",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "parameters ={'C':[0.01,0.1,1],\n",
    "             'penalty':['l2'],\n",
    "             'solver':['lbfgs']}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "15b346ad-a5ed-4707-9fd7-e2d8b5d33007",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=LogisticRegression(),\n",
       "             param_grid={&#x27;C&#x27;: [0.01, 0.1, 1], &#x27;penalty&#x27;: [&#x27;l2&#x27;],\n",
       "                         &#x27;solver&#x27;: [&#x27;lbfgs&#x27;]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=LogisticRegression(),\n",
       "             param_grid={&#x27;C&#x27;: [0.01, 0.1, 1], &#x27;penalty&#x27;: [&#x27;l2&#x27;],\n",
       "                         &#x27;solver&#x27;: [&#x27;lbfgs&#x27;]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "GridSearchCV(cv=5, estimator=LogisticRegression(),\n",
       "             param_grid={'C': [0.01, 0.1, 1], 'penalty': ['l2'],\n",
       "                         'solver': ['lbfgs']})"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parameters ={\"C\":[0.01,0.1,1],'penalty':['l2'], 'solver':['lbfgs']}# l1 lasso l2 ridge\n",
    "logreg=LogisticRegression()\n",
    "logreg_cv = GridSearchCV(logreg, parameters, cv=5)\n",
    "logreg_cv.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "c090a174-ac23-4f9c-8e56-9e6a0f62ca0f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tuned hpyerparameters :(best parameters)  {'C': 0.1, 'penalty': 'l2', 'solver': 'lbfgs'}\n",
      "accuracy : 0.8342857142857143\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(\"tuned hpyerparameters :(best parameters) \",logreg_cv.best_params_)\n",
    "print(\"accuracy :\",logreg_cv.best_score_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "27e653b6-91bf-4d70-bcd9-3a2c6033a110",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy on the test data: 0.8333333333333334\n"
     ]
    }
   ],
   "source": [
    "predictions = logreg_cv.predict(X_test)\n",
    "accuracy = logreg_cv.score(X_test, Y_test)\n",
    "print(f\"Accuracy on the test data: {accuracy}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "31ffee1b-8abc-410d-9d68-6652e283301c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "yhat=logreg_cv.predict(X_test)\n",
    "plot_confusion_matrix(Y_test,yhat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "83a37cc8-4c49-4e59-b026-525db4a74fb3",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Support Vector Machine Object\n",
    "\n",
    "parameters = {'kernel':('linear', 'rbf','poly','rbf', 'sigmoid'),\n",
    "              'C': np.logspace(-3, 3, 5),\n",
    "              'gamma':np.logspace(-3, 3, 5)}\n",
    "svm = SVC()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "9bd752a7-5f33-4863-a0a4-3fea19a49b1a",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=10, estimator=SVC(),\n",
       "             param_grid={&#x27;C&#x27;: array([1.00000000e-03, 3.16227766e-02, 1.00000000e+00, 3.16227766e+01,\n",
       "       1.00000000e+03]),\n",
       "                         &#x27;gamma&#x27;: array([1.00000000e-03, 3.16227766e-02, 1.00000000e+00, 3.16227766e+01,\n",
       "       1.00000000e+03]),\n",
       "                         &#x27;kernel&#x27;: (&#x27;linear&#x27;, &#x27;rbf&#x27;, &#x27;poly&#x27;, &#x27;rbf&#x27;, &#x27;sigmoid&#x27;)})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=10, estimator=SVC(),\n",
       "             param_grid={&#x27;C&#x27;: array([1.00000000e-03, 3.16227766e-02, 1.00000000e+00, 3.16227766e+01,\n",
       "       1.00000000e+03]),\n",
       "                         &#x27;gamma&#x27;: array([1.00000000e-03, 3.16227766e-02, 1.00000000e+00, 3.16227766e+01,\n",
       "       1.00000000e+03]),\n",
       "                         &#x27;kernel&#x27;: (&#x27;linear&#x27;, &#x27;rbf&#x27;, &#x27;poly&#x27;, &#x27;rbf&#x27;, &#x27;sigmoid&#x27;)})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "GridSearchCV(cv=10, estimator=SVC(),\n",
       "             param_grid={'C': array([1.00000000e-03, 3.16227766e-02, 1.00000000e+00, 3.16227766e+01,\n",
       "       1.00000000e+03]),\n",
       "                         'gamma': array([1.00000000e-03, 3.16227766e-02, 1.00000000e+00, 3.16227766e+01,\n",
       "       1.00000000e+03]),\n",
       "                         'kernel': ('linear', 'rbf', 'poly', 'rbf', 'sigmoid')})"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "svm_cv = GridSearchCV(svm, parameters, cv=10)\n",
    "svm_cv.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "a5920b6e-a4d4-4ec9-94ee-54d0829914f2",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tuned hpyerparameters :(best parameters)  {'C': 1.0, 'gamma': 0.03162277660168379, 'kernel': 'sigmoid'}\n",
      "accuracy : 0.8482142857142856\n"
     ]
    }
   ],
   "source": [
    "print(\"tuned hpyerparameters :(best parameters) \",svm_cv.best_params_)\n",
    "print(\"accuracy :\",svm_cv.best_score_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "0c8700c2-9a38-4342-8cf8-26c79cfd92b1",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy on the test data: 0.8333333333333334\n"
     ]
    }
   ],
   "source": [
    "#Calculate Accuracy\n",
    "predictions = svm_cv.predict(X_test)\n",
    "accuracy = svm_cv.score(X_test, Y_test)\n",
    "print(f\"Accuracy on the test data: {accuracy}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "39d6f931-94f1-4646-bc29-e55f92737769",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhIAAAHFCAYAAACn7hC1AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8pXeV/AAAACXBIWXMAAA9hAAAPYQGoP6dpAABDK0lEQVR4nO3de3zP9f//8ft7s4NhY2OMjCFsjmOIHDOnJDoh+eQsERbJx0c1UoY+IQpRDp8USZEOFuXQydlEDKU5VOQYtTE7vH5/+Hl/e7fR9vZ6e733drt2eV0uez9fr9fz+Xjt4p2H5+llMwzDEAAAgBO8rA4AAAAUXCQSAADAaSQSAADAaSQSAADAaSQSAADAaSQSAADAaSQSAADAaSQSAADAaSQSAADAaSQS8Gi7d+9Wnz59FBERIX9/fxUtWlT16tXTlClTdPbsWZe2nZSUpBYtWigoKEg2m03Tp083vQ2bzaZx48aZXu8/WbhwoWw2m2w2mzZs2JDjvGEYqlKlimw2m1q2bOlUG7NmzdLChQvzdc+GDRuuGRMA1yhkdQCAq8ybN0+DBw9WtWrVNGrUKEVFRSkjI0Pbt2/XnDlztGnTJq1YscJl7fft21epqalaunSpSpQooYoVK5rexqZNm3TbbbeZXm9eFStWTG+++WaOZGHjxo06dOiQihUr5nTds2bNUsmSJdW7d+8831OvXj1t2rRJUVFRTrcLIH9IJOCRNm3apMcff1xt2rTRypUr5efnZz/Xpk0bjRw5UomJiS6N4fvvv9eAAQPUoUMHl7Vxxx13uKzuvOjWrZvefvttvfbaawoMDLSXv/nmm2rcuLEuXLhwU+LIyMiQzWZTYGCg5b8T4FbD0AY80sSJE2Wz2TR37lyHJOIqX19f3XvvvfbP2dnZmjJliqpXry4/Pz+Fhobq0Ucf1c8//+xwX8uWLVWzZk1t27ZNzZo1U0BAgCpVqqRJkyYpOztb0v91+2dmZmr27Nn2IQBJGjdunP3nv7p6z+HDh+1l69atU8uWLRUSEqLChQsrPDxcDzzwgNLS0uzX5Da08f3336tz584qUaKE/P39VbduXS1atMjhmqtDAEuWLNHYsWNVtmxZBQYGKjY2VgcOHMjbL1nSww8/LElasmSJvez8+fN6//331bdv31zvGT9+vBo1aqTg4GAFBgaqXr16evPNN/XX9wdWrFhRe/fu1caNG+2/v6s9Oldjf+uttzRy5EiVK1dOfn5++vHHH3MMbZw+fVrly5dXkyZNlJGRYa9/3759KlKkiP71r3/l+VkB5I5EAh4nKytL69atU/369VW+fPk83fP4449r9OjRatOmjVatWqUJEyYoMTFRTZo00enTpx2uPXHihB555BH17NlTq1atUocOHTRmzBgtXrxYktSxY0dt2rRJkvTggw9q06ZN9s95dfjwYXXs2FG+vr6aP3++EhMTNWnSJBUpUkSXL1++5n0HDhxQkyZNtHfvXs2YMUMffPCBoqKi1Lt3b02ZMiXH9f/5z3905MgRvfHGG5o7d65++OEHderUSVlZWXmKMzAwUA8++KDmz59vL1uyZIm8vLzUrVu3az7bY489pmXLlumDDz7Q/fffr6FDh2rChAn2a1asWKFKlSopOjra/vv7+zDUmDFjdPToUc2ZM0cfffSRQkNDc7RVsmRJLV26VNu2bdPo0aMlSWlpaXrooYcUHh6uOXPm5Ok5AVyHAXiYEydOGJKM7t275+n65ORkQ5IxePBgh/ItW7YYkoz//Oc/9rIWLVoYkowtW7Y4XBsVFWW0a9fOoUySMWTIEIey+Ph4I7ev3YIFCwxJRkpKimEYhrF8+XJDkrFr167rxi7JiI+Pt3/u3r274efnZxw9etThug4dOhgBAQHG77//bhiGYaxfv96QZNx9990O1y1btsyQZGzatOm67V6Nd9u2bfa6vv/+e8MwDKNBgwZG7969DcMwjBo1ahgtWrS4Zj1ZWVlGRkaG8fzzzxshISFGdna2/dy17r3aXvPmza95bv369Q7lkydPNiQZK1asMHr16mUULlzY2L1793WfEUDe0COBW9769eslKcekvoYNGyoyMlJffPGFQ3mZMmXUsGFDh7LatWvryJEjpsVUt25d+fr6auDAgVq0aJF++umnPN23bt06tW7dOkdPTO/evZWWlpajZ+SvwzvSleeQlK9nadGihSpXrqz58+drz5492rZt2zWHNa7GGBsbq6CgIHl7e8vHx0fPPfeczpw5o5MnT+a53QceeCDP144aNUodO3bUww8/rEWLFmnmzJmqVatWnu8HcG0kEvA4JUuWVEBAgFJSUvJ0/ZkzZyRJYWFhOc6VLVvWfv6qkJCQHNf5+fnp4sWLTkSbu8qVK+vzzz9XaGiohgwZosqVK6ty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r149lS9fXhs2bDA7PgAACjwj22bK4Y7ynUgsX75cderUkSR99NFHSklJ0f79+xUXF6exY8eaHiAAAHBf+U4kTp8+rTJlykiSPv30Uz300EOqWrWq+vXrpz179pgeIAAABR1DG39RunRp7du3T1lZWUpMTFRsbKwkKS0tTd7e3qYHCABAQWcYNlMOd5Tv5Z99+vRR165dFRYWJpvNpjZt2kiStmzZourVq5seIAAAcF/5TiTGjRunmjVr6tixY3rooYfk5+cnSfL29ta///1v0wMEAKCgc9dhCTM4tSHVgw8+mKOsV69eNxwMAACeyF1XXJghT4nEjBkz8lzhsGHDnA4GAABPZBhWR+A6eUokpk2blqfKbDYbiQQAALeQPCUSKSkpro4DAACP5clDG05vkX358mUdOHBAmZmZZsYDAIDHYWfLv0hLS1O/fv0UEBCgGjVq6OjRo5KuzI2YNGmS6QECAAD3le9EYsyYMfruu++0YcMG+fv728tjY2P17rvvmhocAACewDDMOdxRvpd/rly5Uu+++67uuOMO2Wz/180SFRWlQ4cOmRocAACewF2HJcyQ7x6JU6dOKTQ0NEd5amqqQ2IBAAA8X74TiQYNGuiTTz6xf76aPMybN0+NGzc2LzIAADwE79r4i4SEBLVv31779u1TZmamXnnlFe3du1ebNm3Sxo0bXREjAAAFmidvkZ3vHokmTZrom2++UVpamipXrqw1a9aodOnS2rRpk+rXr++KGAEAgJty6l0btWrV0qJFi8yOBQAAj5TtpsMSZnAqkcjKytKKFSuUnJwsm82myMhIde7cWYUKOVUdAAAezV3nN5gh33/zf//99+rcubNOnDihatWqSZIOHjyoUqVKadWqVapVq5bpQQIAUJCx/PMv+vfvrxo1aujnn3/Wzp07tXPnTh07dky1a9fWwIEDXREjAABwU/nukfjuu++0fft2lShRwl5WokQJvfjii2rQoIGpwQEA4AncdVdKM+S7R6JatWr67bffcpSfPHlSVapUMSUoAAA8yS3/0q4LFy7Yj4kTJ2rYsGFavny5fv75Z/38889avny54uLiNHnyZFfHCwAA3EiehjaKFy/usP21YRjq2rWrvcz4/302nTp1UlZWlgvCBACg4Lrll3+uX7/e1XEAAOCxbvnlny1atHB1HAAAoAByegeptLQ0HT16VJcv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t85z3KdOndKxY8fUr18/DRgwwF6emZlpn3+RnJysOnXqKCAgwCGO/Fq/fr0mTpyoffv26cKFC8rMzNSlS5eUmpqqIkWKSJIKFSqkmJgY+z3Vq1dX8eLFlZycrIYNG2rHjh3atm2bw6vss7KydOnSJaWlpTnEKF0Z+mnTpo2qVaum9u3b65577lHbtm3zHTsA85BIALlo1aqVZs+eLR8fH5UtWzbHZMqrf1FelZ2drbCwMG3YsCFHXc4ugSxcuHC+78nOzpZ0ZXijUaNGDueuDsEYhuFUPH915MgR3X333Ro0aJAmTJig4OBgff311+rXr5/DEJB0Zfnm310ty87O1vjx43X//ffnuMbf3z9HWb169ZSSkqLVq1fr888/V9euXRUbG6vly5ff8DMBcA6JBJCLIkWKqEqVKnm+vl69ejpx4oQKFSqkihUr5npNZGSkNm/erEcffdRetnnz5mvWefvtt6tw4cL64osv1L9//xznr86JyMrKspeVLl1a5cqV008//aRHHnkk13qjoqL01ltv6eLFi/Zk5Xpx5Gb79u3KzMzUyy+/LC+vK3O2ly1bluO6zMxMbd++XQ0bNpQkHThwQL///ruqV68u6crv7cCBA/n6XQcGBqpbt27q1q2bHnzwQbVv315nz55VcHBwvp4BgDlIJAATxMbGqnHjxurSpYsmT56satWq6ddff9Wnn36qLl26KCYmRsOHD1evXr0UExOjpk2b6u2339bevXuvOdnS399fo0eP1tNPPy1fX1/deeedOnXqlPbu3at+/fopNDRUhQsXVmJiom677Tb5+/srKChI48aN07BhwxQYGKgOHTooPT1d27dv17lz5zRixAj16NFDY8eOVb9+/fTMM8/o8OHD+u9//5uv561cubIyMzM1c+ZMderUSd98843mzJmT4zofHx8NHTpUM2bMkI+Pj5544gndcccd9sTiueee0z333KPy5cvroYcekpeXl3bv3q09e/bohRdeyFHftGnTFBYWprp168rLy0vvvfeeypQpY8rGVwCcw/JPwAQ2m02ffvqpmjdvrr59+6pq1arq3r27Dh8+rNKlS0uSunXrpueee06jR49W/fr1deTIET3++OPXrffZZ5/VyJEj9dxzzykyMlLdunXTyZMnJV2ZfzBjxgy9/vrrKlu2rDp37ixJ6t+/v9544w0tXLhQtWrVUosWLbRw4UL7ctGiRYvqo48+0r59+xQdHa2xY8dq8uTJ+XreunXraurUqZo8ebJq1qypt99+O9dlmAEBARo9erR69Oihxo0bq3Dhwlq6dKn9fLt27fTxxx9r7dq1atCgge644w5NnTpVFSpUyLXdokWLavLkyYqJiVGDBg10+PBhffrpp/ZeEQA3n80wY8AUAADckkjjAQCA00gkAACA00gkAACA00gkAACA00gkAACA00gkAACA00gkAACA00gkAACA00gkAACA00gkAACA00gkAACA00gkAACA0/4fSJA9PyZ/6KAAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "yhat=svm_cv.predict(X_test)\n",
    "plot_confusion_matrix(Y_test,yhat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "cb3afb29-bff4-40be-a550-4f15117b83d8",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "parameters = {'criterion': ['gini', 'entropy'],\n",
    "     'splitter': ['best', 'random'],\n",
    "     'max_depth': [2*n for n in range(1,10)],\n",
    "     'max_features': ['auto', 'sqrt'],\n",
    "     'min_samples_leaf': [1, 2, 4],\n",
    "     'min_samples_split': [2, 5, 10]}\n",
    "\n",
    "tree = DecisionTreeClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "92d92122-6f67-45b7-9adc-c4df401a819c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/home/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:425: FitFailedWarning: \n",
      "3240 fits failed out of a total of 6480.\n",
      "The score on these train-test partitions for these parameters will be set to nan.\n",
      "If these failures are not expected, you can try to debug them by setting error_score='raise'.\n",
      "\n",
      "Below are more details about the failures:\n",
      "--------------------------------------------------------------------------------\n",
      "3240 fits failed with the following error:\n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/home/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_validation.py\", line 732, in _fit_and_score\n",
      "    estimator.fit(X_train, y_train, **fit_params)\n",
      "  File \"/Users/home/anaconda3/lib/python3.11/site-packages/sklearn/base.py\", line 1144, in wrapper\n",
      "    estimator._validate_params()\n",
      "  File \"/Users/home/anaconda3/lib/python3.11/site-packages/sklearn/base.py\", line 637, in _validate_params\n",
      "    validate_parameter_constraints(\n",
      "  File \"/Users/home/anaconda3/lib/python3.11/site-packages/sklearn/utils/_param_validation.py\", line 95, in validate_parameter_constraints\n",
      "    raise InvalidParameterError(\n",
      "sklearn.utils._param_validation.InvalidParameterError: The 'max_features' parameter of DecisionTreeClassifier must be an int in the range [1, inf), a float in the range (0.0, 1.0], a str among {'sqrt', 'log2'} or None. Got 'auto' instead.\n",
      "\n",
      "  warnings.warn(some_fits_failed_message, FitFailedWarning)\n",
      "/Users/home/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:976: UserWarning: One or more of the test scores are non-finite: [       nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.63214286 0.68214286 0.83392857 0.775      0.72142857 0.76428571\n",
      " 0.80357143 0.80357143 0.74821429 0.78214286 0.80357143 0.79464286\n",
      " 0.76071429 0.76964286 0.74464286 0.85892857 0.76785714 0.80357143\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.75178571 0.81785714 0.79107143 0.84821429 0.83214286 0.83214286\n",
      " 0.76071429 0.79107143 0.75       0.83214286 0.725      0.86071429\n",
      " 0.80357143 0.83392857 0.69642857 0.80714286 0.81785714 0.87142857\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.77678571 0.79107143 0.81964286 0.84642857 0.74821429 0.83214286\n",
      " 0.67678571 0.80535714 0.80535714 0.84821429 0.77678571 0.81964286\n",
      " 0.81785714 0.73392857 0.81964286 0.76785714 0.7625     0.8375\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.79285714 0.80357143 0.80714286 0.76428571 0.73392857 0.81964286\n",
      " 0.7375     0.73392857 0.83392857 0.78214286 0.7875     0.77678571\n",
      " 0.81428571 0.73928571 0.74642857 0.79107143 0.74821429 0.78928571\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.79464286 0.79107143 0.78928571 0.80535714 0.70892857 0.76607143\n",
      " 0.73571429 0.83392857 0.80178571 0.775      0.78928571 0.77678571\n",
      " 0.81964286 0.73392857 0.79107143 0.83214286 0.79107143 0.83392857\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.80714286 0.81964286 0.76071429 0.81964286 0.76071429 0.80714286\n",
      " 0.78035714 0.80714286 0.77857143 0.7375     0.78928571 0.77857143\n",
      " 0.81607143 0.76607143 0.84642857 0.77857143 0.80357143 0.74821429\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.7625     0.81785714 0.81785714 0.82142857 0.71071429 0.8625\n",
      " 0.75       0.80535714 0.76428571 0.81964286 0.80357143 0.78214286\n",
      " 0.7625     0.83392857 0.7875     0.87678571 0.76785714 0.70892857\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.79464286 0.78928571 0.70714286 0.7125     0.76071429 0.76428571\n",
      " 0.80535714 0.81964286 0.83214286 0.73571429 0.73392857 0.78928571\n",
      " 0.76428571 0.76071429 0.75892857 0.75       0.78928571 0.7125\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.80535714 0.7625     0.73392857 0.74821429 0.77857143 0.80535714\n",
      " 0.74642857 0.74821429 0.77678571 0.77857143 0.81964286 0.75\n",
      " 0.775      0.83392857 0.79107143 0.80357143 0.80357143 0.76607143\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.775      0.77678571 0.80357143 0.81964286 0.84642857 0.80535714\n",
      " 0.80714286 0.81964286 0.71964286 0.80714286 0.75357143 0.7625\n",
      " 0.775      0.76785714 0.74821429 0.775      0.72321429 0.80357143\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.775      0.84464286 0.76428571 0.80892857 0.775      0.84821429\n",
      " 0.83035714 0.83214286 0.84642857 0.74821429 0.7625     0.74642857\n",
      " 0.81607143 0.81964286 0.7625     0.80357143 0.80357143 0.75\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.77321429 0.80535714 0.80535714 0.79107143 0.80714286 0.83392857\n",
      " 0.80535714 0.83214286 0.80535714 0.79107143 0.80357143 0.76071429\n",
      " 0.77678571 0.83214286 0.80535714 0.875      0.83392857 0.83214286\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.76607143 0.81964286 0.81785714 0.8625     0.82142857 0.75\n",
      " 0.77321429 0.74821429 0.79107143 0.78928571 0.775      0.80535714\n",
      " 0.7375     0.83214286 0.74821429 0.7625     0.725      0.80714286\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.76428571 0.76428571 0.79107143 0.79285714 0.83214286 0.77678571\n",
      " 0.74821429 0.80357143 0.80535714 0.7625     0.81607143 0.75357143\n",
      " 0.81964286 0.79464286 0.7625     0.85892857 0.76607143 0.81964286\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.77857143 0.74642857 0.76428571 0.75       0.79285714 0.80535714\n",
      " 0.73571429 0.79107143 0.74821429 0.80714286 0.7625     0.80535714\n",
      " 0.76428571 0.81964286 0.68035714 0.79285714 0.81964286 0.79285714\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.74821429 0.81964286 0.80357143 0.79285714 0.72142857 0.84821429\n",
      " 0.76071429 0.7625     0.80357143 0.69642857 0.72142857 0.775\n",
      " 0.85892857 0.81785714 0.775      0.80535714 0.69107143 0.77678571\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.76607143 0.72142857 0.7625     0.68392857 0.80357143 0.83392857\n",
      " 0.81785714 0.81964286 0.80357143 0.70892857 0.77857143 0.77678571\n",
      " 0.77857143 0.83392857 0.81964286 0.75178571 0.80535714 0.75\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      "        nan        nan        nan        nan        nan        nan\n",
      " 0.81785714 0.84642857 0.74642857 0.77857143 0.81785714 0.81964286\n",
      " 0.76607143 0.77678571 0.77857143 0.81428571 0.76071429 0.7625\n",
      " 0.80535714 0.75178571 0.7625     0.80535714 0.80535714 0.80892857]\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=10, estimator=DecisionTreeClassifier(),\n",
       "             param_grid={&#x27;criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n",
       "                         &#x27;max_depth&#x27;: [2, 4, 6, 8, 10, 12, 14, 16, 18],\n",
       "                         &#x27;max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;],\n",
       "                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n",
       "                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n",
       "                         &#x27;splitter&#x27;: [&#x27;best&#x27;, &#x27;random&#x27;]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=10, estimator=DecisionTreeClassifier(),\n",
       "             param_grid={&#x27;criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n",
       "                         &#x27;max_depth&#x27;: [2, 4, 6, 8, 10, 12, 14, 16, 18],\n",
       "                         &#x27;max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;],\n",
       "                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n",
       "                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n",
       "                         &#x27;splitter&#x27;: [&#x27;best&#x27;, &#x27;random&#x27;]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "GridSearchCV(cv=10, estimator=DecisionTreeClassifier(),\n",
       "             param_grid={'criterion': ['gini', 'entropy'],\n",
       "                         'max_depth': [2, 4, 6, 8, 10, 12, 14, 16, 18],\n",
       "                         'max_features': ['auto', 'sqrt'],\n",
       "                         'min_samples_leaf': [1, 2, 4],\n",
       "                         'min_samples_split': [2, 5, 10],\n",
       "                         'splitter': ['best', 'random']})"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "tree_cv = GridSearchCV(tree, parameters, cv=10)\n",
    "tree_cv.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "3c31bbed-5df3-436a-b5a9-5a4b6168aaac",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tuned hpyerparameters :(best parameters)  {'criterion': 'gini', 'max_depth': 14, 'max_features': 'sqrt', 'min_samples_leaf': 4, 'min_samples_split': 5, 'splitter': 'random'}\n",
      "accuracy : 0.8767857142857143\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(\"tuned hpyerparameters :(best parameters) \",tree_cv.best_params_)\n",
    "print(\"accuracy :\",tree_cv.best_score_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "0ee59e32-ad1c-4e90-ad6d-6309d73c7819",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy on the test data: 0.8333333333333334\n"
     ]
    }
   ],
   "source": [
    "predictions = tree_cv.predict(X_test)\n",
    "accuracy = tree_cv.score(X_test, Y_test)\n",
    "print(f\"Accuracy on the test data: {accuracy}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "b50ed5db-1e95-4b56-bc3a-b2edafafb470",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "yhat = tree_cv.predict(X_test)\n",
    "plot_confusion_matrix(Y_test,yhat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "3507504f-dbe3-452d-b9aa-6b1fd96203a8",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "parameters = {'n_neighbors': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n",
    "              'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute'],\n",
    "              'p': [1,2]}\n",
    "\n",
    "KNN = KNeighborsClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "c97f7813-701f-41ec-8acd-ea4d62b1df78",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {color: black;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=10, estimator=KNeighborsClassifier(),\n",
       "             param_grid={&#x27;algorithm&#x27;: [&#x27;auto&#x27;, &#x27;ball_tree&#x27;, &#x27;kd_tree&#x27;, &#x27;brute&#x27;],\n",
       "                         &#x27;n_neighbors&#x27;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n",
       "                         &#x27;p&#x27;: [1, 2]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=10, estimator=KNeighborsClassifier(),\n",
       "             param_grid={&#x27;algorithm&#x27;: [&#x27;auto&#x27;, &#x27;ball_tree&#x27;, &#x27;kd_tree&#x27;, &#x27;brute&#x27;],\n",
       "                         &#x27;n_neighbors&#x27;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n",
       "                         &#x27;p&#x27;: [1, 2]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "GridSearchCV(cv=10, estimator=KNeighborsClassifier(),\n",
       "             param_grid={'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute'],\n",
       "                         'n_neighbors': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n",
       "                         'p': [1, 2]})"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "knn_cv = GridSearchCV(KNN, parameters, cv=10)\n",
    "knn_cv.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "fb73b077-ffd7-410b-a886-53f8845d6557",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tuned hpyerparameters :(best parameters)  {'algorithm': 'auto', 'n_neighbors': 10, 'p': 1}\n",
      "accuracy : 0.8482142857142858\n"
     ]
    }
   ],
   "source": [
    "print(\"tuned hpyerparameters :(best parameters) \",knn_cv.best_params_)\n",
    "print(\"accuracy :\",knn_cv.best_score_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "36fb5532-1256-4cce-a901-8cfe5cc89914",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy on the test data: 0.8333333333333334\n"
     ]
    }
   ],
   "source": [
    "predictions = knn_cv.predict(X_test)\n",
    "accuracy = knn_cv.score(X_test, Y_test)\n",
    "print(f\"Accuracy on the test data: {accuracy}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "3055ba2a-245b-4962-8358-395717ed62f1",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "yhat = knn_cv.predict(X_test)\n",
    "plot_confusion_matrix(Y_test,yhat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "32f63d72-f03d-4801-9fce-c6494b1837aa",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "unterminated string literal (detected at line 10) (2701706186.py, line 10)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[67], line 10\u001b[0;36m\u001b[0m\n\u001b[0;31m    print(f\"\\nThe best method is: {'Logistic Regression' if best_method == accuracy_logreg\u001b[0m\n\u001b[0m          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unterminated string literal (detected at line 10)\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "92979fbf-c630-47a5-b9f6-1e45a47e06af",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
